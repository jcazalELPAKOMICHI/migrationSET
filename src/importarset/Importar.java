/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package importarset;

import common.Cargar;
import common.ScriptSql;
import common.Tools;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import org.postgresql.ds.PGSimpleDataSource;

/**
 *
 * @author josec
 */
public class Importar extends javax.swing.JFrame {

    /**
     * Creates new form Importar
     */
    DefaultTableModel modelo;
    long c = 0;

    DecimalFormatSymbols otherSymbols = new DecimalFormatSymbols(new Locale("es", "PY"));

    DecimalFormat df;
    DecimalFormat formato = new DecimalFormat();
    private Connection conexion = null;
    public ResultSet resultado = null;
    Cargar hilo;
    private static final int HEADER_HEIGHT = 32;

    public Importar() {
        initComponents();
        modelo = (DefaultTableModel) jtContribuyente.getModel();

        new Tools().Busqued(jtContribuyente, modelo, txtBuscador);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.TXT", "txt");
        otherSymbols.setDecimalSeparator(',');
        otherSymbols.setGroupingSeparator('.');
        formato = new DecimalFormat("###,###.##", otherSymbols);
//Le indicamos el filtro
        seleccionador.setFileFilter(filtro);
        ruta.setText("");
        cant.setText("0");
        record.setText("0");

        JTableHeader header = jtContribuyente.getTableHeader();
        header.setPreferredSize(new Dimension(100, HEADER_HEIGHT));

        //Codigo que da Aspecto del Label de la tabla a las columnas de las tablas
        jtContribuyente.getColumnModel().getColumn(0).setCellRenderer(
                jtContribuyente.getTableHeader().getDefaultRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selector = new javax.swing.JDialog();
        seleccionador = new javax.swing.JFileChooser();
        modal = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        groupRadio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        Progreso = new javax.swing.JProgressBar();
        btnExecute = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        record = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cant = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtContribuyente = new javax.swing.JTable();
        txtBuscador = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ruta = new javax.swing.JTextField();
        btnAbrirTxt = new javax.swing.JButton();
        cbDelimiter = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        cbTipoPersona = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnConectar = new javax.swing.JButton();
        txtPass = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rdSet = new javax.swing.JRadioButton();
        rdApp = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();

        selector.setModal(true);
        selector.setSize(new java.awt.Dimension(643, 427));

        seleccionador.setApproveButtonText("Seleccionar Archivo SET");
        seleccionador.setDialogTitle("Seleccionar");
        seleccionador.setSelectedFile(new java.io.File("C:\\Program Files\\NetBeans-11.2\\*.txt"));
        seleccionador.setToolTipText("");
        seleccionador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectorLayout = new javax.swing.GroupLayout(selector.getContentPane());
        selector.getContentPane().setLayout(selectorLayout);
        selectorLayout.setHorizontalGroup(
            selectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectorLayout.createSequentialGroup()
                .addComponent(seleccionador, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        selectorLayout.setVerticalGroup(
            selectorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(seleccionador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        modal.setModal(true);
        modal.setSize(new java.awt.Dimension(300, 129));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("<html>\n<center>\n<p><b>Aguarde</b></p><br>\n<p><b>un momento!</b></p>\n</center>\n</html>");

        javax.swing.GroupLayout modalLayout = new javax.swing.GroupLayout(modal.getContentPane());
        modal.getContentPane().setLayout(modalLayout);
        modalLayout.setHorizontalGroup(
            modalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        modalLayout.setVerticalGroup(
            modalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BLACK Dwarf System Import::::::::::");
        setExtendedState(6);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Progreso.setStringPainted(true);

        btnExecute.setText("Execute Import");
        btnExecute.setEnabled(false);
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        btnEliminar.setText("Clear Table Item");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnClear.setText("Clear Table");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        record.setEditable(false);
        record.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Record:");

        cant.setEditable(false);
        cant.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setText("Cantidad:");

        jtContribuyente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File NÂ°", "RUC", "DV", "RAZON SOCIAL", "type", "<html><center>DV<br>Corregido<br></center></html>"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtContribuyente.setRowHeight(20);
        jScrollPane1.setViewportView(jtContribuyente);
        if (jtContribuyente.getColumnModel().getColumnCount() > 0) {
            jtContribuyente.getColumnModel().getColumn(0).setMinWidth(100);
            jtContribuyente.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtContribuyente.getColumnModel().getColumn(0).setMaxWidth(100);
            jtContribuyente.getColumnModel().getColumn(1).setMinWidth(100);
            jtContribuyente.getColumnModel().getColumn(1).setPreferredWidth(100);
            jtContribuyente.getColumnModel().getColumn(1).setMaxWidth(100);
            jtContribuyente.getColumnModel().getColumn(2).setMinWidth(50);
            jtContribuyente.getColumnModel().getColumn(2).setPreferredWidth(50);
            jtContribuyente.getColumnModel().getColumn(2).setMaxWidth(50);
            jtContribuyente.getColumnModel().getColumn(4).setMinWidth(0);
            jtContribuyente.getColumnModel().getColumn(4).setPreferredWidth(0);
            jtContribuyente.getColumnModel().getColumn(4).setMaxWidth(0);
            jtContribuyente.getColumnModel().getColumn(5).setMinWidth(100);
            jtContribuyente.getColumnModel().getColumn(5).setPreferredWidth(100);
            jtContribuyente.getColumnModel().getColumn(5).setMaxWidth(100);
        }

        txtBuscador.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscador"));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Route:");

        ruta.setEditable(false);
        ruta.setBackground(new java.awt.Color(255, 255, 255));

        btnAbrirTxt.setText("Open File");
        btnAbrirTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirTxtActionPerformed(evt);
            }
        });

        cbDelimiter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "|", "Tab" }));
        cbDelimiter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbDelimiterKeyTyped(evt);
            }
        });

        jLabel9.setText("Delimiter:");

        cbTipoPersona.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Persona FÃ­sica", "Persona JurÃ­dica" }));
        cbTipoPersona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbTipoPersonaKeyTyped(evt);
            }
        });

        jLabel6.setText("Type Data Import:");

        btnConectar.setText("Connect");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPassKeyTyped(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Password:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Database:");

        txtDatabase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDatabaseKeyTyped(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("User:");

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        jLabel1.setText("Host Database:");

        txtHost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHostKeyTyped(evt);
            }
        });

        txtPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPortKeyTyped(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Port:");

        rdSet.setBackground(new java.awt.Color(255, 255, 255));
        groupRadio.add(rdSet);
        rdSet.setSelected(true);
        rdSet.setText("Usar DV SET");

        rdApp.setBackground(new java.awt.Color(255, 255, 255));
        groupRadio.add(rdApp);
        rdApp.setText("Usar DV AplicaciÃ³n");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(txtBuscador)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ruta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAbrirTxt))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Progreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExecute))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtPort, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDatabase, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnConectar)))
                            .addComponent(txtHost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbTipoPersona, 0, 1, Short.MAX_VALUE)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addComponent(rdSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdApp)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPass)
                                .addComponent(btnConectar))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(ruta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAbrirTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(record, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear)
                            .addComponent(btnEliminar)
                            .addComponent(jLabel8)
                            .addComponent(rdSet)
                            .addComponent(rdApp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExecute)
                            .addComponent(Progreso, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cbTipoPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(cbDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenu1.setText("Options");

        jMenuItem1.setText("Calcular DÃ­gito Verificador");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator2);

        jMenuItem2.setText("Exportar a Excel");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionadorActionPerformed
        JFileChooser selectorArchivo = (JFileChooser) evt.getSource();
        //Creamos el filtro

        String command = evt.getActionCommand();
        if (command.equals(JFileChooser.APPROVE_SELECTION)) {
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            ruta.setText(archivoSeleccionado.getAbsolutePath());
            selector.dispose();

            creatArr();

        } else {
            if (command.equals(JFileChooser.CANCEL_SELECTION)) {
                selector.dispose();
            }
        }
    }//GEN-LAST:event_seleccionadorActionPerformed

    private void btnAbrirTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirTxtActionPerformed
        selector.setVisible(true);
    }//GEN-LAST:event_btnAbrirTxtActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new CalcularDv(this, true).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            Tools.exportarExcel(jtContribuyente);
        } catch (IOException ex) {
            Logger.getLogger(Importar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        for (int i = jtContribuyente.getRowCount() - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
        c = 0;
        ruta.setText("");
        cant.setText("0");
        record.setText("0");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        if (validar())
            conexion();
    }//GEN-LAST:event_btnConectarActionPerformed

    private void txtHostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHostKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            txtPort.requestFocus();
        }
    }//GEN-LAST:event_txtHostKeyTyped

    private void txtPortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            txtDatabase.requestFocus();
        }
        if (!Character.isDigit(letra)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPortKeyTyped

    private void txtDatabaseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDatabaseKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            txtUser.requestFocus();
        }
    }//GEN-LAST:event_txtDatabaseKeyTyped

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            txtPass.requestFocus();
        }
    }//GEN-LAST:event_txtUserKeyTyped

    private void txtPassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            btnConectar.requestFocus();
        }
    }//GEN-LAST:event_txtPassKeyTyped

    private void cbTipoPersonaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbTipoPersonaKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            cbDelimiter.requestFocus();
        }
    }//GEN-LAST:event_cbTipoPersonaKeyTyped

    private void cbDelimiterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbDelimiterKeyTyped
        int letra = evt.getKeyChar();
        if (letra == 10) {
            btnAbrirTxt.requestFocus();
        }
    }//GEN-LAST:event_cbDelimiterKeyTyped

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        if (jtContribuyente.getRowCount() > 0) {

            if (isExist()) {
                insertData();
            } else {
                int crear = JOptionPane.showConfirmDialog(this, "La tabla de contribuyentes no Existe, Desea crear la tabla?", "Confirmar", JOptionPane.OK_CANCEL_OPTION);
                if (crear == 0) {
                    crearTabla();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No hay Datos cargados para importar", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int con = JOptionPane.showConfirmDialog(this, "Desea eliminar los items seleccionados?", "Confirmar", JOptionPane.OK_CANCEL_OPTION);
        if (con == 0) {
            int numRows = jtContribuyente.getSelectedRows().length;
            for (int i = 0; i < numRows; i++) {
                modelo.removeRow(jtContribuyente.getSelectedRow());
            }
            c = jtContribuyente.getRowCount();
            cant.setText(String.valueOf(formato.format(c)));
            for (int i = 0; i < jtContribuyente.getRowCount(); i++) {
                jtContribuyente.setValueAt((i + 1), i, 0);
            }

        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void creatArr() {
        String delimiter = null;
        switch (cbDelimiter.getSelectedIndex()) {
            case 0:
                delimiter = "|";
                break;
            case 1:
                delimiter = "\t";
                break;
        }

        BufferedReader br;
        try {
            br = new BufferedReader(new InputStreamReader(new FileInputStream(ruta.getText()), "UTF-8"));

            String line = br.readLine();
            while (line != null) {
                String[] rowfields = line.split("[" + delimiter + "]+");

                if (!rowfields[0].equals("RUC")) {
                    c++;
                    String ruc = rowfields[0];
                    String razon = rowfields[1];
                    String dv = rowfields[2];
                    int dvCorregido = Tools.calcularDV(ruc, 11);
                    switch (cbTipoPersona.getSelectedIndex()) {
                        case 0:
                            modelo.addRow(new Object[]{c, ruc, dv, razon, "f", dvCorregido});
                            break;
                        case 1:
                            modelo.addRow(new Object[]{c, ruc, razon, dv, "j", dvCorregido});
                            break;
                    }

                }
                line = br.readLine();
            }
            cant.setText(String.valueOf(formato.format(c)));
        } catch (FileNotFoundException e) {
            // can be thrown when creating the FileReader/BufferedReader
            // deal with the exception
            JOptionPane.showMessageDialog(this, "Error al importar, verifique su Delimitador", "Error", JOptionPane.ERROR_MESSAGE);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al importar, verifique su Delimitador", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void conexion() {

        try {
            PGSimpleDataSource dataSource = new PGSimpleDataSource();
            dataSource.setServerNames(new String[]{txtHost.getText()});
            dataSource.setDatabaseName(txtDatabase.getText());
            dataSource.setPortNumbers(new int[]{Integer.parseInt(txtPort.getText())});
            dataSource.setUser(txtUser.getText());
            dataSource.setPassword(txtPass.getText());
            dataSource.setCurrentSchema("public");
            conexion = dataSource.getConnection();
            blockComponent();
            JOptionPane.showMessageDialog(this, "Success Connection in " + txtDatabase.getText() + "", "Success!", JOptionPane.INFORMATION_MESSAGE);
            cbTipoPersona.requestFocus();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Fail Connection in " + txtDatabase.getText() + "", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean validar() {
        if (txtHost.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese El Host", "Error", JOptionPane.WARNING_MESSAGE);
            txtHost.requestFocus();
            return false;
        }
        if (txtPort.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese El puerto de la BD", "Error", JOptionPane.WARNING_MESSAGE);
            txtPort.requestFocus();
            return false;
        }
        if (txtDatabase.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese El ingrese el Nombre de la BD", "Error", JOptionPane.WARNING_MESSAGE);
            txtDatabase.requestFocus();
            return false;
        }
        if (txtPass.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese El password del usuario de la BD", "Error", JOptionPane.WARNING_MESSAGE);
            txtPass.requestFocus();
            return false;
        }
        if (txtUser.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese El Usuario de la BD", "Error", JOptionPane.WARNING_MESSAGE);
            txtUser.requestFocus();
            return false;
        }
        return true;
    }

    private void blockComponent() {
        txtHost.setEnabled(false);
        txtUser.setEnabled(false);
        txtPass.setEnabled(false);
        txtDatabase.setEnabled(false);
        txtPort.setEnabled(false);
        btnExecute.setEnabled(true);

    }

    private boolean isExist() {
        Boolean existe = false;
        try {
            PreparedStatement ps = conexion.prepareStatement(ScriptSql.ISEXXIST);
            resultado = ps.executeQuery();
            resultado.next();
            existe = resultado.getBoolean(1);
        } catch (SQLException ex) {
            Logger.getLogger(Importar.class.getName()).log(Level.SEVERE, null, ex);
        }
        return existe;
    }

    private void crearTabla() {
        try {
            PreparedStatement ps = conexion.prepareStatement(ScriptSql.CREATE_TABLE);
            ps.execute();
            int crear = JOptionPane.showConfirmDialog(this, "La tabla fue creada con Exito, desea continuar con la importaciÃ³n", "Success!", JOptionPane.OK_CANCEL_OPTION);
            if (crear == 0) {
                insertData();
            }
        } catch (SQLException ex) {

        }
    }

    private void insertData() {
        Runnable miRunnable = () -> {
            try {
                iniciar();

            } catch (Exception e) {
            }
        };
        Thread hilos = new Thread(miRunnable);
        hilos.start();
    }

    private void iniciar() {
        guardar();
        hilo.start();
        hilo = null;
    }
    private boolean bandera = false;

    public void guardar() {
        new Tools().LimpiarBusqueda(txtBuscador, jtContribuyente);
        btnClear.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAbrirTxt.setEnabled(false);
        txtBuscador.setEnabled(false);
        try {
            long cguardado = 0;

            PreparedStatement ps = conexion.prepareStatement(ScriptSql.INSERT_DATA);

            for (int in = 0; in < jtContribuyente.getRowCount(); in++) {
                try {
                    cguardado++;
                    ps.setString(1, jtContribuyente.getValueAt(in, 1).toString());
                    ps.setInt(2, (rdSet.isSelected() ? Integer.parseInt(jtContribuyente.getValueAt(in, 2).toString()) : Integer.parseInt(jtContribuyente.getValueAt(in, 5).toString())));
                    ps.setString(3, jtContribuyente.getValueAt(in, 3).toString());
                    ps.setString(4, jtContribuyente.getValueAt(in, 4).toString());
                    ps.addBatch();

                    record.setText(String.valueOf(formato.format(in + 1)));
                    hilo = new Cargar(getProgreso(), Integer.parseInt(cant.getText().replace(".", "")), Integer.parseInt(record.getText().replace(".", "")));
                } catch (Exception ex) {
                    jtContribuyente.getSelectionModel().setSelectionInterval(in, in);
                    jtContribuyente.scrollRectToVisible(new Rectangle(jtContribuyente.getCellRect(in, 0, true)));
                    JOptionPane.showMessageDialog(this, "Error en la lÃ­nea " + (in + 1), "Error", JOptionPane.ERROR_MESSAGE);
                    bandera = false;
                    break;
                }
            }

            ps.executeBatch();
            if (bandera) {
                JOptionPane.showMessageDialog(this, "Han sido Insertados: " + cguardado + " Registros", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                for (int i = jtContribuyente.getRowCount() - 1; i >= 0; i--) {
                    modelo.removeRow(i);
                }
                c = 0;
                ruta.setText("");
                cant.setText("0");
                record.setText("0");
                Progreso.setValue(0);
                Progreso.setString("0%");
                btnClear.setEnabled(true);
                btnEliminar.setEnabled(true);
                txtBuscador.setEnabled(true);
                btnAbrirTxt.setEnabled(true);
            } else {
                bandera = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Importar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public javax.swing.JProgressBar getProgreso() {
        return Progreso;
    }

    /**
     * @param Progreso the Progreso to set
     */
    public void setProgreso(javax.swing.JProgressBar Progreso) {
        this.Progreso = Progreso;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Progreso;
    private javax.swing.JButton btnAbrirTxt;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExecute;
    private javax.swing.JTextField cant;
    private javax.swing.JComboBox<String> cbDelimiter;
    private javax.swing.JComboBox<String> cbTipoPersona;
    private javax.swing.ButtonGroup groupRadio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTable jtContribuyente;
    private javax.swing.JDialog modal;
    private javax.swing.JRadioButton rdApp;
    private javax.swing.JRadioButton rdSet;
    private javax.swing.JTextField record;
    private javax.swing.JTextField ruta;
    private javax.swing.JFileChooser seleccionador;
    private javax.swing.JDialog selector;
    private javax.swing.JTextField txtBuscador;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtHost;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
